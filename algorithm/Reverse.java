package algorithm;

public class Reverse {
    //给你一个 32 位的有符号整数 x ，返回 x 中每位上的数字反转后的结果。
//
// 如果反转后整数超过 32 位的有符号整数的范围 [?231, 231 ? 1] ，就返回 0。
//假设环境不允许存储 64 位整数（有符号或无符号）。
//
//
//
// 示例 1：
//
//
//输入：x = 123
//输出：321
//
//
// 示例 2：
//
//
//输入：x = -123
//输出：-321
//
//
// 示例 3：
//
//
//输入：x = 120
//输出：21
//
//
// 示例 4：
//
//
//输入：x = 0
//输出：0
//
//
//
//
// 提示：
//
//
// -231 <= x <= 231 - 1
//
// Related Topics 数学
// ? 2529 ? 0


    //leetcode submit region begin(Prohibit modification and deletion)
    public int reverse(int x) {
        if (x < 10 && x > -10) return x;
        boolean isNegative;
        if (isNegative = (x < 0)) x = -x;
        long result = 0;
        while (x >= 1) {
            if (result == 0)
                result = x % 10;
            else
                result = result * 10 + x % 10;
            if (result >= Math.pow(2, 31) - 1)
                return 0;
            x /= 10;
        }
        if (isNegative) result = -result;
        return (int) result;
    }
//leetcode submit region end(Prohibit modification and deletion)

}
