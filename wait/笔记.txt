方法重写


final关键字



多态
    
   概念

   三大前提

   成员特点

   多态中的转型

   好处和弊端
	好处：
		提高了代码的维护性（继承）
		提高了代码的扩展性

	弊端：不能访问子类的特有方法
		多态中的转型
			父类引用强制转换为子类对象
			子类类型 子类对象 = (子类类型)父类引用;

	


抽象类
	用来描述现实世界中的抽象事物

	定义抽象类描述抽象事物

格式
	abstract class{
		
	} 

抽象方法---描述 描述不清的行为 ，不能有方法体
	abstract 返回值类型 方法名();


特点
	抽象类无法实例化

	抽象类用来被继承的

	抽象类子类特点：
			要么是抽象类
			要么重写父类中的所有抽象方法。


成员特点
	成员方法：一个抽象类中可以有非+抽象方法
				有抽象方法的类必须是抽象类

	构造方法：
			抽象类有构造方法，但是抽象无法实例化，用来做什么？
			给子类用的。
			因为抽象类用来被继承的，子类的构造方法默认调用父类的无参构造方法，所以抽象类必须有无参构造方法。


	成员变量：可以有,可以有常量。




接口
	定义接口
		定义规则
	实现接口
		相当于扩展了功能


